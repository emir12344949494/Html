from flask import Flask, render_template, request, redirect, url_for
from pymongo import MongoClient
from bson.objectid import ObjectId

app = Flask(__name__, static_folder="static")

# MongoDB configuration
def get_db():
    client = MongoClient('mongodb+srv://22300040:Delta1500@dayrongc.b4fakiy.mongodb.net/')
    db = client["BD1"]
    return db

@app.route('/')
def iniciar():
    return render_template('principal.html')

@app.route('/buscar')
def buscar():
    return render_template('buscar.html')

@app.route('/marcas')
def marcas():
    return render_template('marcas.html')

@app.route('/productos')
def productos():
    return render_template('productos.html')

@app.route('/folio')
def folio():
    return render_template('folio.html')

@app.route('/catalogo')
def catalogo():
    return render_template('catalogo.html')

@app.route('/buzon')
def buzon():
    return render_template('buzon.html')

@app.route('/person')
def person():
    return render_template('person.html')

@app.route('/inventario')
def inventario_route():
    return render_template('inventario.html')

@app.route('/vista')
def vista():
    return render_template('vista.html')

@app.route('/data')
def data():
    db = get_db()
    inventario = list(db.inventario.find())
    return render_template('data.html', inventario=inventario)

@app.route('/add_item', methods=['GET', 'POST'])
def add_item():
    if request.method == 'POST':
        nombre = request.form['nombre']
        cantidad = request.form['cantidad']
        db = get_db()
        db.inventario.insert_one({'nombre': nombre, 'cantidad': cantidad})
        return redirect(url_for('data'))
    return render_template('add_item.html')

@app.route('/delete_item/<item_id>')
def delete_item(item_id):
    db = get_db()
    db.inventario.delete_one({'_id': ObjectId(item_id)})
    return redirect(url_for('data'))

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        producto = request.form['exacto']
        clave_empleado = request.form['username']
        contraseña = request.form['password']
        sucursal = request.form['sucursal']
        base_datos = request.form['data']
        db = get_db()
        db.registro.insert_one({
            'producto': producto,
            'clave_empleado': clave_empleado,
            'contraseña': contraseña,
            'sucursal': sucursal,
            'base_datos': base_datos
        })
        return redirect(url_for('inventario_route'))
    return render_template('register.html')



#
#
#
#
#
#

#Restistro de usuario 
@app.route('/usuarios')
def usuarios():
    db = get_db()
    datos = list(db.usuarios.find())
    return render_template('usuarios.html', datos=datos)

@app.route('/submit', methods=['POST'])
def submit():
    nombre = request.form.get('nombre')
    apellido = request.form.get('apellido')
    genero = request.form.get('genero')
    correo = request.form.get('correo')
    contraseña = request.form.get('contraseña')

    try:
        db = get_db()
        db.usuarios.insert_one({
            'nombre': nombre,
            'apellido': apellido,
            'genero': genero,
            'correo': correo,
            'contraseña': contraseña
        })
        return redirect(url_for('usuarios'))
    except Exception as e:
        print("Error: tus datos no han sido registrados :(", e)
        return f"Hola {nombre}, {apellido}, tus datos no han sido registrados: {e}"

if __name__ == '__main__':
    app.run(debug=True, host='localhost', port=8090)
